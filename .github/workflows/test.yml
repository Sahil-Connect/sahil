name: Test on Pull Request & Push

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  build:
    name: Format, Build and Test
    if: ${{ false }}  # disable for now
    timeout-minutes: 15
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3 
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node modules
        id: cache-yarn
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: $ {{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys:
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-yarn.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: yarn list

      - name: Install dependencies
        run: yarn install --frozen-lockfile --ignore-engines

      - name: Format 
        run: yarn format

      #- name: Linting 
      # run: yarn lint

      # - name: Codegen
      #   run: yarn codegen

      - name: Build
        run: yarn build --filter=website --filter=api --filter=agent

      #- name: Test
      #  run: yarn test
